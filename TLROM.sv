// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module TLROM(
  input         clock,
                reset,
                auto_in_a_valid,
  input  [2:0]  auto_in_a_bits_opcode,
                auto_in_a_bits_param,
  input  [1:0]  auto_in_a_bits_size,
  input  [10:0] auto_in_a_bits_source,
  input  [16:0] auto_in_a_bits_address,
  input  [7:0]  auto_in_a_bits_mask,
  input         auto_in_a_bits_corrupt,
                auto_in_d_ready,
  output        auto_in_a_ready,
                auto_in_d_valid,
  output [1:0]  auto_in_d_bits_size,
  output [10:0] auto_in_d_bits_source,
  output [63:0] auto_in_d_bits_data
);

  wire [511:0][63:0] _GEN =
    '{64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h0,
      64'h73656D616E2D74,
      64'h757074756F2D6B63,
      64'h6F6C6300736C6C65,
      64'h632D6B636F6C6323,
      64'h73747075727265,
      64'h746E6900746E6572,
      64'h61702D7470757272,
      64'h65746E6900736B63,
      64'h6F6C63007665646E,
      64'h2C76637369720079,
      64'h7469726F6972702D,
      64'h78616D2C76637369,
      64'h7200686361747461,
      64'h2D67756265640064,
      64'h65646E657478652D,
      64'h7374707572726574,
      64'h6E6900746E756F63,
      64'h2D7268736D2C6576,
      64'h6966697300646569,
      64'h66696E752D656863,
      64'h6163006C6576656C,
      64'h2D65686361630073,
      64'h656D616E2D676572,
      64'h7365676E617200,
      64'h656C646E61687000,
      64'h72656C6C6F72746E,
      64'h6F632D7470757272,
      64'h65746E6900736C6C,
      64'h65632D7470757272,
      64'h65746E6923007469,
      64'h6C70732D626C7400,
      64'h7375746174730073,
      64'h6E6F69676572706D,
      64'h702C766373697200,
      64'h79746972616C756E,
      64'h617267706D702C76,
      64'h6373697200617369,
      64'h2C76637369720067,
      64'h6572006568636163,
      64'h2D6C6576656C2D74,
      64'h78656E0065707974,
      64'h2D756D6D00657A69,
      64'h732D626C742D6900,
      64'h737465732D626C74,
      64'h2D6900657A69732D,
      64'h65686361632D6900,
      64'h737465732D656863,
      64'h61632D6900657A69,
      64'h732D6B636F6C622D,
      64'h65686361632D6900,
      64'h746E756F632D746E,
      64'h696F706B61657262,
      64'h2D636578652D6572,
      64'h6177647261680065,
      64'h7079745F65636976,
      64'h656400657A69732D,
      64'h626C742D64007374,
      64'h65732D626C742D64,
      64'h657A69732D6568,
      64'h6361632D64007374,
      64'h65732D6568636163,
      64'h2D6400657A69732D,
      64'h6B636F6C622D6568,
      64'h6361632D64007963,
      64'h6E6575716572662D,
      64'h6B636F6C63007963,
      64'h6E6575716572662D,
      64'h65736162656D6974,
      64'h306C6169726573,
      64'h6C65646F6D0065,
      64'h6C62697461706D6F,
      64'h6300736C6C65632D,
      64'h657A69732300736C,
      64'h6C65632D73736572,
      64'h6464612309000000,
      64'h200000002000000,
      64'h2000000006C6F72,
      64'h746E6F639C010000,
      64'h800000003000000,
      64'h10000000001100,
      64'h2201000008000000,
      64'h300000000000000,
      64'h3030303031314072,
      64'h65747465732D7465,
      64'h7365722D656C6974,
      64'h100000002000000,
      64'h60000008D010000,
      64'h400000003000000,
      64'h6B636F6C632D64,
      64'h657869661B000000,
      64'hC00000003000000,
      64'h6B636F6C,
      64'h635F737562705F6D,
      64'h6574737973627573,
      64'h4102000015000000,
      64'h300000000E1F505,
      64'h4700000004000000,
      64'h300000000000000,
      64'h3402000004000000,
      64'h300000000000000,
      64'h6B636F6C635F7375,
      64'h62705F6D65747379,
      64'h7362757301000000,
      64'h2000000006B636F,
      64'h6C632D6465786966,
      64'h1B0000000C000000,
      64'h300000000000000,
      64'h6B636F6C635F7375,
      64'h626D5F6D65747379,
      64'h7362757341020000,
      64'h1500000003000000,
      64'hE1F50547000000,
      64'h400000003000000,
      64'h34020000,
      64'h400000003000000,
      64'h6B636F6C,
      64'h635F7375626D5F6D,
      64'h6574737973627573,
      64'h100000002000000,
      64'h6C6F72746E6F63,
      64'h9C01000008000000,
      64'h300000000100000,
      64'h5422010000,
      64'h800000003000000,
      64'h100000029020000,
      64'h400000003000000,
      64'h700000018020000,
      64'h400000003000000,
      64'h30747261,
      64'h752C657669666973,
      64'h1B0000000D000000,
      64'h300000006000000,
      64'h1102000004000000,
      64'h300000000303030,
      64'h3030303435406C61,
      64'h6972657301000000,
      64'h2000000006D656D,
      64'h9C01000004000000,
      64'h300000000000100,
      64'h10022010000,
      64'h800000003000000,
      64'h306D6F722C6576,
      64'h696669731B000000,
      64'hC00000003000000,
      64'h3030303031,
      64'h406D6F7201000000,
      64'h200000004000000,
      64'h8D01000004000000,
      64'h300000000000100,
      64'h20022010000,
      64'h800000003000000,
      64'h3030303032406D,
      64'h6F722D666977626C,
      64'h100000002000000,
      64'h30000008D010000,
      64'h400000003000000,
      64'h10000000000010,
      64'h2201000008000000,
      64'h300000000003030,
      64'h303030303031406D,
      64'h61722D666977626C,
      64'h100000002000000,
      64'h70000008D010000,
      64'h400000003000000,
      64'h100000006020000,
      64'h400000003000000,
      64'h1000000F3010000,
      64'h400000003000000,
      64'h6C6F72746E6F63,
      64'h9C01000008000000,
      64'h300000000000004,
      64'hC22010000,
      64'h800000003000000,
      64'h900000005000000,
      64'hB00000005000000,
      64'hD201000010000000,
      64'h300000078010000,
      64'h3000000,
      64'h3063696C702C76,
      64'h637369721B000000,
      64'hC00000003000000,
      64'h100000067010000,
      64'h400000003000000,
      64'h30303030,
      64'h3030634072656C6C,
      64'h6F72746E6F632D74,
      64'h7075727265746E69,
      64'h100000002000000,
      64'h10000000300000,
      64'h2201000008000000,
      64'h300000000000030,
      64'h726F7272652C6576,
      64'h696669731B000000,
      64'hE00000003000000,
      64'h3030303340,
      64'h6563697665642D72,
      64'h6F72726501000000,
      64'h2000000006C6F72,
      64'h746E6F639C010000,
      64'h800000003000000,
      64'h10000000000000,
      64'h2201000008000000,
      64'h3000000FFFF0000,
      64'h5000000D2010000,
      64'h800000003000000,
      64'h6761746A,
      64'hE601000005000000,
      64'h300000000000000,
      64'h3331302D67756265,
      64'h642C766373697200,
      64'h3331302D67756265,
      64'h642C657669666973,
      64'h1B00000021000000,
      64'h300000000003040,
      64'h72656C6C6F72746E,
      64'h6F632D6775626564,
      64'h100000002000000,
      64'h6C6F72746E6F63,
      64'h9C01000008000000,
      64'h300000000100000,
      64'h100022010000,
      64'h800000003000000,
      64'h303030303031,
      64'h4072657461672D6B,
      64'h636F6C6301000000,
      64'h2000000006C6F72,
      64'h746E6F639C010000,
      64'h800000003000000,
      64'h10000000002,
      64'h2201000008000000,
      64'h300000007000000,
      64'h500000003000000,
      64'h5000000D2010000,
      64'h1000000003000000,
      64'h30746E69,
      64'h6C632C7663736972,
      64'h1B0000000D000000,
      64'h300000000000030,
      64'h3030303030324074,
      64'h6E696C6301000000,
      64'h200000001000000,
      64'h8D01000004000000,
      64'h30000000C000000,
      64'hC001000004000000,
      64'h3000000006C6F72,
      64'h746E6F639C010000,
      64'h800000003000000,
      64'h10000000000102,
      64'h2201000008000000,
      64'h300000004000000,
      64'h300000002000000,
      64'h110100000C000000,
      64'h300000000000000,
      64'h6568636163003065,
      64'h6863616365766973,
      64'h756C636E692C6576,
      64'h696669731B000000,
      64'h1D00000003000000,
      64'hB201000000000000,
      64'h300000000000800,
      64'h7900000004000000,
      64'h300000000040000,
      64'h6C00000004000000,
      64'h300000002000000,
      64'hA601000004000000,
      64'h300000040000000,
      64'h5900000004000000,
      64'h300000000000000,
      64'h3030303031303240,
      64'h72656C6C6F72746E,
      64'h6F632D6568636163,
      64'h100000002000000,
      64'h6C6F72746E6F63,
      64'h9C01000008000000,
      64'h300000000100000,
      64'h40000022010000,
      64'h800000003000000,
      64'h3030303440,
      64'h6765722D73736572,
      64'h6464612D746F6F62,
      64'h100000095010000,
      64'h3000000,
      64'h7375622D656C70,
      64'h6D697300636F732D,
      64'h6E776F6E6B6E752D,
      64'h7069686374656B63,
      64'h6F722C7370696863,
      64'h656572661B000000,
      64'h2C00000003000000,
      64'h10000000F000000,
      64'h400000003000000,
      64'h100000000000000,
      64'h400000003000000,
      64'h636F7301000000,
      64'h200000002000000,
      64'h8D01000004000000,
      64'h300000000000010,
      64'h8022010000,
      64'h800000003000000,
      64'h79726F6D656D,
      64'h9A00000007000000,
      64'h300000000303030,
      64'h3030303038407972,
      64'h6F6D656D01000000,
      64'h200000000000030,
      64'h666974682C626375,
      64'h1B0000000A000000,
      64'h300000000000000,
      64'h6669746801000000,
      64'h200000002000000,
      64'h200000005000000,
      64'h8D01000004000000,
      64'h300000078010000,
      64'h3000000,
      64'h63746E692D75,
      64'h70632C7663736972,
      64'h1B0000000F000000,
      64'h300000001000000,
      64'h6701000004000000,
      64'h300000000000000,
      64'h72656C6C6F72746E,
      64'h6F632D7470757272,
      64'h65746E6901000000,
      64'h5D01000000000000,
      64'h300000040420F00,
      64'h3400000004000000,
      64'h300000000000000,
      64'h79616B6F56010000,
      64'h500000003000000,
      64'h800000045010000,
      64'h400000003000000,
      64'h400000030010000,
      64'h400000003000000,
      64'h74656B636F72,
      64'h585F6D7068695A5F,
      64'h6965636E6566695A,
      64'h5F727363695A6364,
      64'h66616D6934367672,
      64'h2601000027000000,
      64'h300000000000000,
      64'h2201000004000000,
      64'h300000001000000,
      64'h1101000004000000,
      64'h300000000003933,
      64'h76732C7663736972,
      64'h80100000B000000,
      64'h300000020000000,
      64'hFD00000004000000,
      64'h300000001000000,
      64'hF200000004000000,
      64'h300000000400000,
      64'hE500000004000000,
      64'h300000040000000,
      64'hD800000004000000,
      64'h300000040000000,
      64'hC500000004000000,
      64'h300000001000000,
      64'hA600000004000000,
      64'h300000000757063,
      64'h9A00000004000000,
      64'h300000020000000,
      64'h8F00000004000000,
      64'h300000001000000,
      64'h8400000004000000,
      64'h300000000400000,
      64'h7700000004000000,
      64'h300000040000000,
      64'h6A00000004000000,
      64'h300000040000000,
      64'h5700000004000000,
      64'h300000000000000,
      64'h7663736972003074,
      64'h656B636F722C6576,
      64'h696669731B000000,
      64'h1500000003000000,
      64'h47000000,
      64'h400000003000000,
      64'h3040757063,
      64'h100000040420F00,
      64'h3400000004000000,
      64'h300000000000000,
      64'hF00000004000000,
      64'h300000001000000,
      64'h4000000,
      64'h300000000000000,
      64'h7375706301000000,
      64'h200000000000000,
      64'h3030303030303435,
      64'h406C61697265732F,
      64'h636F732F2C000000,
      64'h1500000003000000,
      64'h73657361696C61,
      64'h100000000000000,
      64'h6E776F6E6B6E752D,
      64'h7069686374656B63,
      64'h6F722C7370696863,
      64'h6565726626000000,
      64'h1D00000003000000,
      64'h7665642D,
      64'h6E776F6E6B6E752D,
      64'h7069686374656B63,
      64'h6F722C7370696863,
      64'h656572661B000000,
      64'h2100000003000000,
      64'h10000000F000000,
      64'h400000003000000,
      64'h100000000000000,
      64'h400000003000000,
      64'h1000000,
      64'h0,
      64'h0,
      64'h740A000054020000,
      64'h10000000,
      64'h1100000028000000,
      64'hAC0A000038000000,
      64'hD0000EDFE0DD0,
      64'h1330200073,
      64'h3006307308000613,
      64'h185859300000597,
      64'hF140257334151073,
      64'h5350300004537,
      64'h5A02300B505B3,
      64'h251513FE029EE3,
      64'h5A283FC1FF06F,
      64'h0,
      64'hFFDFF06F,
      64'h1050007330052073,
      64'h3045107300800513,
      64'h3030107300028463,
      64'h12F2934122D293,
      64'h301022F330551073,
      64'hFC05051300000517,
      64'h0,
      64'h0,
      64'h6C0006F,
      64'hFE069AE3FFC62683,
      64'h46061300D62023,
      64'h10069300458613,
      64'h780006F00050463,
      64'hF1402573020005B7};	// @[BootROM.scala:53:47]
  TLMonitor_65 monitor (	// @[Nodes.scala:24:25]
    .clock                (clock),
    .reset                (reset),
    .io_in_a_ready        (auto_in_d_ready),
    .io_in_a_valid        (auto_in_a_valid),
    .io_in_a_bits_opcode  (auto_in_a_bits_opcode),
    .io_in_a_bits_param   (auto_in_a_bits_param),
    .io_in_a_bits_size    (auto_in_a_bits_size),
    .io_in_a_bits_source  (auto_in_a_bits_source),
    .io_in_a_bits_address (auto_in_a_bits_address),
    .io_in_a_bits_mask    (auto_in_a_bits_mask),
    .io_in_a_bits_corrupt (auto_in_a_bits_corrupt),
    .io_in_d_ready        (auto_in_d_ready),
    .io_in_d_valid        (auto_in_a_valid),
    .io_in_d_bits_size    (auto_in_a_bits_size),
    .io_in_d_bits_source  (auto_in_a_bits_source)
  );
  assign auto_in_a_ready = auto_in_d_ready;
  assign auto_in_d_valid = auto_in_a_valid;
  assign auto_in_d_bits_size = auto_in_a_bits_size;
  assign auto_in_d_bits_source = auto_in_a_bits_source;
  assign auto_in_d_bits_data = (|(auto_in_a_bits_address[15:12])) ? 64'h0 : _GEN[auto_in_a_bits_address[11:3]];	// @[BootROM.scala:46:22, :51:34, :52:64, :53:{47,53}]
endmodule

